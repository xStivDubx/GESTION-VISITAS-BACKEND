AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Globals:
  # Globals define las configuraciones que se aplican a todas las funciones por defecto
  Function:
    Timeout: 15
    MemorySize: 512
    Runtime: nodejs22.x
    Architectures:
      - x86_64

Parameters:
  dbUrl:
    Type: String
    Description: "Database connection URL"

  jwtSecret:
    Type: String
    Description: "Secret key for JWT"
  
  jwtExpiresIn:
    Type: String
    Description: "JWT expiration time"


Resources:

  MailFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: mail/
      Handler: index.handler
      Environment:
        Variables:
          DB_URL: !Ref dbUrl
          JWT_SECRET: !Ref jwtSecret
      Events:
        SendMail:
          Type: Api
          Properties:
            Path: /mail/send
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2022"
        Sourcemap: false
        EntryPoints:
          - index.ts



  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: auth/
      Handler: index.handler
      Environment:
        Variables:
          DB_URL: !Ref dbUrl
          JWT_SECRET: !Ref jwtSecret
          JWT_EXPIRES_IN: !Ref jwtExpiresIn
      Events:
        Profile:
          Type: Api
          Properties:
            Path: /auth/profile
            Method: get
        Login:
          Type: Api
          Properties:
            Path: /auth/login
            Method: post
        ChangePassword:
          Type: Api
          Properties:
            Path: /auth/change-password
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2022"
        Sourcemap: false
        EntryPoints:
          - index.ts
        
            
  UserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: user/
      Handler: index.handler
      Environment:
        Variables:
          DB_URL: !Ref dbUrl
          JWT_SECRET: !Ref jwtSecret
          JWT_EXPIRES_IN: !Ref jwtExpiresIn
      Events:
        GetAllUsers:
          Type: Api
          Properties:
            Path: /user/
            Method: get
        GetById:
          Type: Api
          Properties:
            Path: /user/{id}
            Method: get
        GetAllTechnicalUsers:
          Type: Api
          Properties:
            Path: /user/technical/{userId}
            Method: get
        CreateUser:
          Type: Api
          Properties:
            Path: /user/save
            Method: post
        UpdateUser:
          Type: Api
          Properties:
            Path: /user/update
            Method: put
        DeleteUser:
          Type: Api
          Properties:
            Path: /user/delete
            Method: put
        ResetPassword:
          Type: Api
          Properties:
            Path: /user/reset-password
            Method: put
        AssignTechnical:
          Type: Api
          Properties:
            Path: /user/assign-technical
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2022"
        Sourcemap: false
        EntryPoints:
          - index.ts



  RoleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: role/
      Handler: index.handler
      Environment:
        Variables:
          DB_URL: !Ref dbUrl
          JWT_SECRET: !Ref jwtSecret
          JWT_EXPIRES_IN: !Ref jwtExpiresIn
      Events:
        GetAllRoles:
          Type: Api
          Properties:
            Path: /role/
            Method: get 
        GetRoleById:
          Type: Api
          Properties:
            Path: /role/{id}
            Method: get
        GetPermissionsByRoleId:
          Type: Api
          Properties:
            Path: /role/permissions/{roleId}
            Method: get
        CreateRole:
          Type: Api
          Properties:
            Path: /role/save
            Method: post
        UpdateRole:
          Type: Api
          Properties:
            Path: /role/update
            Method: put 
        AssignPermissionToRole:
          Type: Api
          Properties:
            Path: /role/assign-permission
            Method: post
        DeleteRole:
          Type: Api
          Properties:
            Path: /role/delete
            Method: put
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2022"
        Sourcemap: false
        EntryPoints:
          - index.ts


  ConfigFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: configurations/
      Handler: index.handler
      Environment:
        Variables:
          DB_URL: !Ref dbUrl
          JWT_SECRET: !Ref jwtSecret
          JWT_EXPIRES_IN: !Ref jwtExpiresIn
      Events:
        GetAllConfigs:
          Type: Api
          Properties:
            Path: /configuration/
            Method: get
        GetConfigById:
          Type: Api
          Properties:
            Path: /configuration/{id}
            Method: get
        UpdateConfig:
          Type: Api
          Properties:
            Path: /configuration/update
            Method: put

  ClientFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: client/
      Handler: index.handler
      Environment:
        Variables:
          DB_URL: !Ref dbUrl
          JWT_SECRET: !Ref jwtSecret
          JWT_EXPIRES_IN: !Ref jwtExpiresIn
      Events:
        GetAllClients:
          Type: Api
          Properties: 
            Path: /client/
            Method: get
        GetClientById:
          Type: Api
          Properties:
            Path: /client/{id}
            Method: get
        CreateClient:
          Type: Api
          Properties:
            Path: /client/save
            Method: post
        UpdateClient:
          Type: Api
          Properties:
            Path: /client/update
            Method: put
        DeleteClient:
          Type: Api
          Properties:
            Path: /client/delete
            Method: put
        GetSitesByClientId:
          Type: Api
          Properties:
            Path: /client/sites-by-client/{id}
            Method: get
        GetSiteBySiteId:
          Type: Api
          Properties:
            Path: /client/site/{id}
            Method: get
        CreateSite:
          Type: Api
          Properties:
            Path: /client/site/save
            Method: post
        UpdateSite:
          Type: Api
          Properties:
            Path: /client/site/update
            Method: put
        DeleteSite:
          Type: Api
          Properties:
            Path: /client/site/delete
            Method: put
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2022"
        Sourcemap: false
        EntryPoints:
          - index.ts


  technicalVisitFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: technical-visit/
      Handler: index.handler
      Environment:
        Variables:
          DB_URL: !Ref dbUrl
          JWT_SECRET: !Ref jwtSecret
          JWT_EXPIRES_IN: !Ref jwtExpiresIn
      Events:
        GetAllTechnicalVisits:
          Type: Api
          Properties:
            Path: /technical-visit/
            Method: get
        GetTechnicalVisitById:
          Type: Api
          Properties:
            Path: /technical-visit/{id}
            Method: get
        OperationCheckInVisit:
          Type: Api
          Properties:
            Path: /technical-visit/check-in
            Method: post
        OperationCheckOutVisit:
          Type: Api
          Properties:
            Path: /technical-visit/check-out
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2022"
        Sourcemap: false
        EntryPoints:
          - index.ts
          
  configVisitFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: config-visit/
      Handler: index.handler
      Environment:
        Variables:
          DB_URL: !Ref dbUrl
          JWT_SECRET: !Ref jwtSecret
          JWT_EXPIRES_IN: !Ref jwtExpiresIn
      Events:
        GetTechniciansBySupervisor:
          Type: Api
          Properties:
            Path: /config-visit/technicians-by-supervisor/{id}
            Method: get
        GetClientsActive:
          Type: Api
          Properties:
            Path: /config-visit/clients-active/
            Method: get
        GetActiveLocationsByClient:
          Type: Api
          Properties:
            Path: /config-visit/active-locations-by-client/{id}
            Method: get
        CreateVisit:
          Type: Api
          Properties:
            Path: /config-visit/create-visit
            Method: post
        UpdateVisit:
          Type: Api
          Properties:
            Path: /config-visit/update-visit
            Method: put
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2022"
        Sourcemap: false
        EntryPoints:
          - index.ts



# Outputs define las salidas que se mostrar√°n al finalizar el despliegue
Outputs:
  ProjectEndpoint:
    Description: "API endpoint URL for dev stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
